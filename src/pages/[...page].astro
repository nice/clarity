---
import type { Page } from "astro";
import Seo from "../components/Seo.astro";
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import TextCard from "../components/TextCard.astro";
import ImageCard from "../components/ImageCard.astro";
import Pagination from "../components/Pagination.astro";
import { POSTS_PER_PAGE } from "../consts";

import { getCollection } from "astro:content";

export async function getStaticPaths({ paginate }) {
  const posts = (await getCollection("blog")).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
  );

  return paginate(posts, { pageSize: POSTS_PER_PAGE });
}

// All paginated data is passed on the "page" prop
const { page }: { page: Page } = Astro.props;
---

<Layout>
  <Fragment slot="head">
    <Seo />
  </Fragment>

  <Fragment slot="body">
    <div class="grid">
      <div class="flex gap-6">
        <div class="grid-col w-full md:w-1/2 lg:w-1/3"></div>
        <div class="grid-col w-1/2 hidden md:block lg:w-1/3"></div>
        <div class="grid-col w-1/3 hidden lg:block"></div>
      </div>

      {
        page.data.map((post) => {
          let card = null;

          if (post.data.cardType === "default") {
            card = <Card slug={post.slug} {...post.data} />;
          } else if (post.data.cardType === "text") {
            card = <TextCard slug={post.slug} {...post.data} />;
          } else if (post.data.cardType === "image") {
            card = <ImageCard slug={post.slug} {...post.data} />;
          }

          return card;
        })
      }
    </div>
    <!-- .grid -->

    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </Fragment>
</Layout>
